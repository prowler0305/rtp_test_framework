{
  "test": {
    "description": "This test returns the object dependency report for a storage group.",
    "connection": {
      "ssid": "DH0G",
      "userid": "QADBA01"
    },
    "threading": {
      "threads": 5,
      "parallel": "true"
    },
    "statements": [
      {
        "text": "SET CURRENT DEGREE='ANY'",
        "type": "IMMEDIATE",
        "subtype": "SELECT",
        "repeat": 1
      },
      {
        "text": "WITH DESCENDANTS ( PATH ,KEYEDPATH ,DTYPE ,DKEY1 ,DKEY2 ,DKEY3 ,DESCRIPTION ,LEVEL ,DIRECTION ,BTYPE ,BKEY1 ,BKEY2 ) AS ( ( SELECT CAST( CASE TB.TYPE WHEN 'C' THEN 'CT' WHEN 'H' THEN 'HT' WHEN 'M' THEN 'MQ' WHEN 'P' THEN 'XT' WHEN 'T' THEN 'TB' WHEN 'X' THEN 'AT' WHEN 'G' THEN 'GT' ELSE '??' END AS VARCHAR(128))  AS PATH ,CAST( CASE TB.TYPE WHEN 'C' THEN 'CT' WHEN 'H' THEN 'HT' WHEN 'M' THEN 'MQ' WHEN 'P' THEN 'XT' WHEN 'T' THEN 'TB' WHEN 'X' THEN 'AT' WHEN 'G' THEN 'GT' ELSE '??' END || '(' || TB.CREATOR || ',' || TB.NAME    || ')' AS VARCHAR(7400)) AS KEYEDPATH ,CAST( CASE TB.TYPE WHEN 'C' THEN 'CT' WHEN 'H' THEN 'HT' WHEN 'M' THEN 'MQ' WHEN 'P' THEN 'XT' WHEN 'T' THEN 'TB' WHEN 'X' THEN 'AT' WHEN 'G' THEN 'GT' ELSE '??' END AS CHAR(2))                     AS DTYPE ,CAST(TB.CREATOR AS VARCHAR(128)) AS DKEY1 ,CAST(TB.NAME AS VARCHAR(128))    AS DKEY2 ,CAST('' AS VARCHAR(128))         AS DKEY3 ,CAST('* initial table *' AS VARCHAR(128)) AS DESCRIPTION, INTEGER(0)   AS LEVEL ,CAST('' AS VARCHAR(128)) AS DIRECTION ,CAST('TS' AS CHAR(2))            AS BTYPE ,CAST(TB.DBNAME AS VARCHAR(128))  AS BKEY1 ,CAST(TB.TSNAME AS VARCHAR(128))  AS BKEY2 FROM SYSIBM.SYSTABLES TB WHERE TB.CREATOR = ? AND TB.NAME = ? ) UNION ALL SELECT DSC.PATH || '->PK' AS PATH ,DSC.KEYEDPATH || '--> PK(' || PK.COLLID || ',' || PK.NAME || ',' || CHAR(HEX(PK.CONTOKEN)) || ')' AS KEYEDPATH ,'PK'        AS DTYPE ,PK.COLLID   AS DKEY1 ,PK.NAME     AS DKEY2 ,CHAR(HEX(PK.CONTOKEN)) AS DKEY3 ,'package'   AS DESCRIPTION ,DSC.LEVEL+1 AS LEVEL ,'C'         AS DIRECTION ,DSC.DTYPE   AS BTYPE ,DSC.DKEY1   AS BKEY1 ,DSC.DKEY2   AS BKEY2 FROM DESCENDANTS DSC ,SYSIBM.SYSPACKAGE PK ,SYSIBM.SYSPACKDEP PD WHERE DSC.LEVEL < 1 AND DSC.DTYPE IN('TB','MQ','XT','AT','CT','HT','GT') AND PD.BTYPE IN ('M','T','G') AND PD.BQUALIFIER = DSC.DKEY1 AND PD.BNAME = DSC.DKEY2 AND PK.LOCATION = PD.DLOCATION AND PK.COLLID = PD.DCOLLID AND PK.NAME = PD.DNAME AND PK.CONTOKEN = PD.DCONTOKEN UNION ALL SELECT DSC.PATH || '->PL' AS PATH ,DSC.KEYEDPATH || '--> PL(' || PL.NAME || ')' AS KEYEDPATH ,'PL'    AS DTYPE ,PL.NAME AS DKEY1 ,''      AS DKEY2 ,''      AS DKEY3 ,'plan'  AS DESCRIPTION ,DSC.LEVEL+1 AS LEVEL ,'C'     AS DIRECTION ,DSC.DTYPE AS BTYPE ,DSC.DKEY1 AS BKEY1 ,DSC.DKEY2 AS BKEY2 FROM DESCENDANTS DSC ,SYSIBM.SYSPLAN PL ,SYSIBM.SYSPLANDEP PD WHERE DSC.LEVEL < 1 AND DSC.DTYPE IN ('TB','MQ','XT','AT','CT','HT','GT') AND PD.BTYPE IN ('M','T','G') AND PD.BCREATOR = DSC.DKEY1 AND PD.BNAME = DSC.DKEY2 AND PL.NAME = PD.DNAME UNION ALL SELECT DSC.PATH || '->CT' AS PATH ,DSC.KEYEDPATH || '--> CT(' || TB.TBCREATOR || ',' || TB.TBNAME || ')' AS KEYEDPATH ,'CT'         AS DTYPE ,TB.TBCREATOR AS DKEY1 ,TB.TBNAME    AS DKEY2 ,''           AS DKEY3 ,'clone table' AS DESCRIPTION ,DSC.LEVEL+1  AS LEVEL ,'C'          AS DIRECTION ,DSC.DTYPE    AS BTYPE ,DSC.DKEY1    AS BKEY1 ,DSC.DKEY2    AS BKEY2 FROM DESCENDANTS DSC ,SYSIBM.SYSTABLES TB WHERE DSC.LEVEL < 20 AND DSC.DTYPE IN('TB') AND TB.CREATOR = DSC.DKEY1 AND TB.NAME = DSC.DKEY2 AND TB.TBCREATOR <> '' AND TB.TBNAME <> '' UNION ALL SELECT DSC.PATH || '->XT' AS PATH ,DSC.KEYEDPATH || '--> XT(' || TB.CREATOR || ',' || TB.NAME || ')' AS KEYEDPATH ,'XT'       AS DTYPE ,TB.CREATOR AS DKEY1 ,TB.NAME    AS DKEY2 ,''         AS DKEY3 ,'implicitly created XML table' AS DESCRIPTION ,DSC.LEVEL+1 AS LEVEL ,'C'        AS DIRECTION ,DSC.DTYPE  AS BTYPE ,DSC.DKEY1  AS BKEY1 ,DSC.DKEY2  AS BKEY2 FROM DESCENDANTS DSC ,SYSIBM.SYSTABLES TB ,SYSIBM.SYSXMLRELS XR WHERE DSC.LEVEL < 20 AND DSC.DTYPE IN('TB','HT') AND XR.TBOWNER = DSC.DKEY1 AND XR.TBNAME = DSC.DKEY2 AND TB.CREATOR = XR.XMLTBOWNER AND TB.NAME = XR.XMLTBNAME UNION ALL SELECT DSC.PATH || '->HT' AS PATH ,DSC.KEYEDPATH || '--> HT(' || TB.VERSIONING_SCHEMA || ',' || TB.VERSIONING_TABLE || ')' AS KEYEDPATH ,'HT'  AS DTYPE ,TB.VERSIONING_SCHEMA AS DKEY1 ,TB.VERSIONING_TABLE AS DKEY2 ,''    AS DKEY3 ,'history table' AS DESCRIPTION ,DSC.LEVEL+1 AS LEVEL ,'C'   AS DIRECTION ,DSC.DTYPE AS BTYPE ,DSC.DKEY1 AS BKEY1 ,DSC.DKEY2 AS BKEY2 FROM DESCENDANTS DSC ,SYSIBM.SYSTABLES TB WHERE DSC.LEVEL < 20 AND DSC.DTYPE IN('TB') AND TB.CREATOR = DSC.DKEY1 AND TB.NAME = DSC.DKEY2 AND TB.VERSIONING_SCHEMA <> '' AND TB.VERSIONING_TABLE <> '' UNION ALL SELECT DSC.PATH || '->AT' AS PATH ,DSC.KEYEDPATH || '--> AT(' || TB.CREATOR || ',' || TB.NAME || ')' AS KEYEDPATH ,'AT'       AS DTYPE ,TB.CREATOR AS DKEY1 ,TB.NAME    AS DKEY2 ,''         AS DKEY3 ,'auxiliary table' AS DESCRIPTION ,DSC.LEVEL+1 AS LEVEL ,'C'        AS DIRECTION ,DSC.DTYPE  AS BTYPE ,DSC.DKEY1  AS BKEY1 ,DSC.DKEY2  AS BKEY2 FROM DESCENDANTS DSC ,SYSIBM.SYSTABLES TB ,SYSIBM.SYSAUXRELS AR WHERE DSC.LEVEL < 20 AND DSC.DTYPE IN('TB','MQ','HT','CT') AND AR.TBOWNER = DSC.DKEY1 AND AR.TBNAME = DSC.DKEY2 AND TB.CREATOR = AR.AUXTBOWNER AND TB.NAME = AR.AUXTBNAME UNION ALL SELECT DSC.PATH || '->IX' AS PATH ,DSC.KEYEDPATH || '--> IX(' || IX.CREATOR || ',' || IX.NAME || ')' AS KEYEDPATH ,'IX'       AS DTYPE ,IX.CREATOR AS DKEY1 ,IX.NAME    AS DKEY2 ,''         AS DKEY3 ,'index'    AS DESCRIPTION ,DSC.LEVEL+1 AS LEVEL ,'C'        AS DIRECTION ,DSC.DTYPE  AS BTYPE ,DSC.DKEY1  AS BKEY1 ,DSC.DKEY2  AS BKEY2 FROM DESCENDANTS DSC ,SYSIBM.SYSINDEXES IX WHERE DSC.LEVEL < 20 AND DSC.DTYPE IN('TB','XT','AT','HT','MQ') AND IX.TBCREATOR = DSC.DKEY1 AND IX.TBNAME = DSC.DKEY2 UNION ALL SELECT DSC.PATH || '->CC' AS PATH ,DSC.KEYEDPATH || '--> CC(' || CC.CHECKNAME || ',' || CC.TBOWNER || ',' || CC.TBNAME || ')' AS KEYEDPATH ,'CC'         AS DTYPE ,CC.CHECKNAME AS DKEY1 ,CC.TBOWNER   AS DKEY2 ,CC.TBNAME    AS DKEY3 ,'check constraint' AS DESCRIPTION ,DSC.LEVEL+1 AS LEVEL ,'C'         AS DIRECTION ,DSC.DTYPE   AS BTYPE ,DSC.DKEY1   AS BKEY1 ,DSC.DKEY2   AS BKEY2 FROM DESCENDANTS DSC ,SYSIBM.SYSCHECKS CC WHERE DSC.LEVEL < 20 AND DSC.DTYPE IN('TB','CT','HT') AND CC.TBOWNER = DSC.DKEY1 AND CC.TBNAME = DSC.DKEY2 UNION ALL SELECT DSC.PATH || '->UC' AS PATH ,DSC.KEYEDPATH || '--> UC(' || TC.CONSTNAME || ',' || TC.TBCREATOR || ',' || TC.TBNAME || ')' AS KEYEDPATH ,'UC'         AS DTYPE ,TC.CONSTNAME AS DKEY1 ,TC.TBCREATOR AS DKEY2 ,TC.TBNAME    AS DKEY3 ,'unique constraint' AS DESCRIPTION ,DSC.LEVEL+1 AS LEVEL ,'C'         AS DIRECTION ,DSC.DTYPE   AS BTYPE ,DSC.DKEY1   AS BKEY1 ,DSC.DKEY2   AS BKEY2 FROM DESCENDANTS DSC ,SYSIBM.SYSTABCONST TC WHERE DSC.LEVEL < 20 AND DSC.DTYPE IN('TB','CT','HT') AND TC.TBCREATOR = DSC.DKEY1 AND TC.TBNAME = DSC.DKEY2 UNION ALL SELECT DSC.PATH || '->Rc' AS PATH ,DSC.KEYEDPATH || '--> Rc(' || SR.RELNAME || ',' || SR.CREATOR || ',' || SR.TBNAME || ')' AS KEYEDPATH ,'Rc'       AS DTYPE ,SR.RELNAME AS DKEY1 ,SR.CREATOR AS DKEY2 ,SR.TBNAME  AS DKEY3 ,'referential constraint - child' AS DESCRIPTION ,DSC.LEVEL+1 AS LEVEL ,'C'        AS DIRECTION ,DSC.DTYPE  AS BTYPE ,DSC.DKEY1  AS BKEY1 ,DSC.DKEY2  AS BKEY2 FROM DESCENDANTS DSC ,SYSIBM.SYSRELS SR WHERE DSC.LEVEL < 20 AND DSC.DTYPE IN('TB','HT') AND SR.CREATOR = DSC.DKEY1 AND SR.TBNAME = DSC.DKEY2 UNION ALL SELECT DSC.PATH || '->Rp' AS PATH ,DSC.KEYEDPATH || '--> Rp(' || SR.RELNAME || ',' || SR.REFTBCREATOR || ',' || SR.REFTBNAME || ')' AS KEYEDPATH ,'Rp'        AS DTYPE ,SR.RELNAME  AS DKEY1 ,SR.REFTBCREATOR  AS DKEY2 ,SR.REFTBNAME AS DKEY3 ,'referential constraint - parent' AS DESCRIPTION ,DSC.LEVEL+1 AS LEVEL ,'C'         AS DIRECTION ,DSC.DTYPE   AS BTYPE ,DSC.DKEY1   AS BKEY1 ,DSC.DKEY2   AS BKEY2 FROM DESCENDANTS DSC ,SYSIBM.SYSRELS SR WHERE DSC.LEVEL < 20 AND DSC.DTYPE IN('TB','HT') AND SR.REFTBCREATOR = DSC.DKEY1 AND SR.REFTBNAME    = DSC.DKEY2 UNION ALL SELECT DSC.PATH || '->' || CASE RP.CONTROL_TYPE WHEN 'R' THEN 'RP' WHEN 'M' THEN 'CM' ELSE '??' END AS PATH ,DSC.KEYEDPATH || '--> ' || CASE RP.CONTROL_TYPE WHEN 'R' THEN 'RP(' WHEN 'M' THEN 'CM(' ELSE '??' END || RP.SCHEMA || ',' || RP.NAME || ')' AS KEYEDPATH ,CASE RP.CONTROL_TYPE WHEN 'R' THEN 'RP' WHEN 'M' THEN 'CM' ELSE '??' END         AS DTYPE ,RP.SCHEMA   AS DKEY1 ,RP.NAME     AS DKEY2 ,''          AS DKEY3 ,CASE RP.CONTROL_TYPE WHEN 'R' THEN 'row permission' WHEN 'M' THEN 'column mask' ELSE '--> error <-- ' || RP.CONTROL_TYPE END         AS DESCRIPTION ,DSC.LEVEL+1 AS LEVEL ,'C'         AS DIRECTION ,DSC.DTYPE   AS BTYPE ,DSC.DKEY1   AS BKEY1 ,DSC.DKEY2   AS BKEY2 FROM DESCENDANTS DSC ,SYSIBM.SYSCONTROLS RP WHERE DSC.LEVEL < 20 AND DSC.DTYPE IN('TB','MQ','HT','CT') AND RP.TBSCHEMA = DSC.DKEY1 AND RP.TBNAME = DSC.DKEY2 UNION ALL SELECT DSC.PATH || '->' || CASE VD.DTYPE WHEN 'V' THEN 'VW' WHEN 'M' THEN 'MQ' ELSE '??' END AS PATH ,DSC.KEYEDPATH || '--> ' || CASE VD.DTYPE WHEN 'V' THEN 'VW(' WHEN 'M' THEN 'MQ(' ELSE '??' END || VD.DCREATOR || ',' || VD.DNAME || ')' AS KEYEDPATH ,CASE VD.DTYPE WHEN 'V' THEN 'VW' WHEN 'M' THEN 'MQ' ELSE '??' END         AS DTYPE ,VD.DCREATOR AS DKEY1 ,VD.DNAME    AS DKEY2 ,''          AS DKEY3 ,CASE VD.DTYPE WHEN 'V' THEN 'view' WHEN 'M' THEN 'MQT' ELSE '--> error <-- ' || VD.DTYPE END         AS DESCRIPTION ,DSC.LEVEL+1 AS LEVEL ,'C'         AS DIRECTION ,DSC.DTYPE   AS BTYPE ,DSC.DKEY1   AS BKEY1 ,DSC.DKEY2   AS BKEY2 FROM DESCENDANTS DSC ,SYSIBM.SYSVIEWDEP VD WHERE DSC.LEVEL < 20 AND DSC.DTYPE IN ('VW','MQ','TB','CT','HT','GT') AND VD.BCREATOR = DSC.DKEY1 AND VD.BNAME = DSC.DKEY2 UNION ALL SELECT DSC.PATH || '->SY' AS PATH ,DSC.KEYEDPATH || '--> SY(' || SY.CREATOR || ',' || SY.NAME || ')' AS KEYEDPATH ,'SY'       AS DTYPE ,SY.CREATOR AS DKEY1 ,SY.NAME    AS DKEY2 ,''         AS DKEY3 ,'synonym'  AS DESCRIPTION ,DSC.LEVEL+1 AS LEVEL ,'C'        AS DIRECTION ,DSC.DTYPE  AS BTYPE ,DSC.DKEY1  AS BKEY1 ,DSC.DKEY2  AS BKEY2 FROM DESCENDANTS DSC ,SYSIBM.SYSSYNONYMS SY WHERE DSC.LEVEL < 20 AND DSC.DTYPE IN ('VW','AL','MQ','TB','CT','HT','GT') AND SY.TBCREATOR = DSC.DKEY1 AND SY.TBNAME = DSC.DKEY2 UNION ALL SELECT DSC.PATH || '->AL' AS PATH ,DSC.KEYEDPATH || '--> AL(' || AL.CREATOR || ',' || AL.NAME || ')' AS KEYEDPATH ,'AL'       AS DTYPE ,AL.CREATOR AS DKEY1 ,AL.NAME    AS DKEY2 ,''         AS DKEY3 ,'alias'    AS DESCRIPTION ,DSC.LEVEL+1 AS LEVEL ,'C'        AS DIRECTION ,DSC.DTYPE  AS BTYPE ,DSC.DKEY1  AS BKEY1 ,DSC.DKEY2  AS BKEY2 FROM DESCENDANTS DSC ,SYSIBM.SYSTABLES AL WHERE DSC.LEVEL < 20 AND DSC.DTYPE IN ('VW','SY','MQ','TB','CT','HT','GT') AND AL.TYPE = 'A' AND AL.TBCREATOR = DSC.DKEY1 AND AL.TBNAME = DSC.DKEY2 UNION ALL SELECT DSC.PATH || '->TG' AS PATH ,DSC.KEYEDPATH || '--> TG(' || TG.SCHEMA || ',' || TG.NAME || ')' AS KEYEDPATH ,'TG'      AS DTYPE ,TG.SCHEMA AS DKEY1 ,TG.NAME   AS DKEY2 ,''        AS DKEY3 ,'trigger' AS DESCRIPTION ,DSC.LEVEL+1 AS LEVEL ,'C'       AS DIRECTION ,DSC.DTYPE AS BTYPE ,DSC.DKEY1 AS BKEY1 ,DSC.DKEY2 AS BKEY2 FROM DESCENDANTS DSC ,SYSIBM.SYSTRIGGERS TG WHERE DSC.LEVEL < 20 AND DSC.DTYPE IN ('VW','TB','HT','XT') AND TG.TBOWNER = DSC.DKEY1 AND TG.TBNAME = DSC.DKEY2 ) ,ASCENDANTS ( PATH ,KEYEDPATH ,DTYPE ,DKEY1 ,DKEY2 ,DKEY3 ,DESCRIPTION ,LEVEL ,DIRECTION ,BTYPE ,BKEY1 ,BKEY2 ) AS ( ( SELECT DSC.PATH || '<-TS' ,DSC.KEYEDPATH || ' <--TS(' || DSC.BKEY1 || ',' || DSC.BKEY2 || ')' AS KEYEDPATH ,'TS'      AS DTYPE ,DSC.BKEY1 AS DKEY1 ,DSC.BKEY2 AS DKEY2 ,''        AS DKEY3 ,'table space'  AS DESCRIPTION ,INTEGER(1)         AS LEVEL ,'P'       AS DIRECTION ,'DB'      AS BTYPE ,DSC.BKEY1 AS BKEY1 ,''        AS BKEY2 FROM DESCENDANTS DSC WHERE DSC.LEVEL = 0 AND DSC.BTYPE = 'TS' UNION SELECT DSC.PATH  AS PATH ,DSC.KEYEDPATH AS KEYEDPATH ,DSC.DTYPE AS DTYPE ,DSC.DKEY1 AS DKEY1 ,DSC.DKEY2 AS DKEY2 ,DSC.DKEY3 AS DKEY3 ,DSC.DESCRIPTION AS DESCRIPTION ,INTEGER(0)    AS LEVEL ,''   AS DIRECTION ,'TB' AS BTYPE ,CASE TB.TYPE WHEN 'C' THEN TB.TBCREATOR WHEN 'H' THEN TB.VERSIONING_SCHEMA ELSE '--> error <-- ' || TB.TYPE END AS BKEY1 ,CASE TB.TYPE WHEN 'C' THEN TB.TBNAME WHEN 'H' THEN TB.VERSIONING_TABLE ELSE '--> error <-- ' || TB.TYPE END AS BKEY2 FROM DESCENDANTS DSC ,SYSIBM.SYSTABLES TB WHERE DSC.LEVEL = 0 AND DSC.DTYPE IN ('CT','HT') AND TB.CREATOR = DSC.DKEY1 AND TB.NAME =DSC.DKEY2 UNION SELECT DSC.PATH  AS PATH ,DSC.KEYEDPATH AS KEYEDPATH ,DSC.DTYPE AS DTYPE ,DSC.DKEY1 AS DKEY1 ,DSC.DKEY2 AS DKEY2 ,DSC.DKEY3 AS DKEY3 ,DSC.DESCRIPTION AS DESCRIPTION ,INTEGER(0)          AS LEVEL ,''        AS DIRECTION ,CASE TB.TYPE WHEN 'T' THEN 'TB' WHEN 'C' THEN 'CT' WHEN 'H' THEN 'HT' WHEN 'M' THEN 'MQ' ELSE '?' || TB.TYPE END AS BTYPE ,AR.TBOWNER AS BKEY1 ,AR.TBNAME  AS BKEY2 FROM DESCENDANTS DSC ,SYSIBM.SYSAUXRELS AR ,SYSIBM.SYSTABLES  TB WHERE DSC.LEVEL = 0 AND DSC.DTYPE IN ('AT') AND AR.AUXTBOWNER = DSC.DKEY1 AND AR.AUXTBNAME  = DSC.DKEY2 AND AR.TBOWNER = TB.CREATOR AND AR.TBNAME = TB.NAME UNION SELECT DSC.PATH   AS PATH ,DSC.KEYEDPATH AS KEYEDPATH ,DSC.DTYPE  AS DTYPE ,DSC.DKEY1  AS DKEY1 ,DSC.DKEY2  AS DKEY2 ,DSC.DKEY3  AS DKEY3 ,DSC.DESCRIPTION AS DESCRIPTION ,INTEGER(0)           AS LEVEL ,''         AS DIRECTION ,CASE TB.TYPE WHEN 'T' THEN 'TB' WHEN 'H' THEN 'HT' ELSE '?' || TB.TYPE END AS BTYPE ,XR.TBOWNER AS BKEY1 ,XR.TBNAME  AS BKEY2 FROM DESCENDANTS DSC ,SYSIBM.SYSXMLRELS XR ,SYSIBM.SYSTABLES TB WHERE DSC.LEVEL = 0 AND DSC.DTYPE IN ('XT') AND XR.XMLTBOWNER = DSC.DKEY1 AND XR.XMLTBNAME  = DSC.DKEY2 AND XR.TBOWNER = TB.CREATOR AND XR.TBNAME = TB.NAME UNION SELECT DSC.PATH      AS PATH ,DSC.KEYEDPATH AS KEYEDPATH ,DSC.DTYPE     AS DTYPE ,DSC.DKEY1     AS DKEY1 ,DSC.DKEY2     AS DKEY2 ,DSC.DKEY3     AS DKEY3 ,DSC.DESCRIPTION AS DESCRIPTION ,INTEGER(0)            AS LEVEL ,''          AS DIRECTION ,CASE TB.TYPE WHEN 'M' THEN 'MQ' WHEN 'T' THEN 'TB' WHEN 'V' THEN 'VW' WHEN 'G' THEN 'GT' WHEN 'C' THEN 'CT' WHEN 'H' THEN 'HT' ELSE '?' || TB.TYPE END          AS BTYPE ,VD.BCREATOR AS BKEY1 ,VD.BNAME    AS BKEY2 FROM DESCENDANTS DSC ,SYSIBM.SYSVIEWDEP VD ,SYSIBM.SYSTABLES  TB WHERE DSC.LEVEL = 0 AND DSC.DTYPE IN ('MQ') AND VD.DCREATOR = DSC.DKEY1 AND VD.DNAME = DSC.DKEY2 AND VD.BCREATOR = TB.CREATOR AND VD.BNAME = TB.NAME AND VD.BTYPE <> 'F' UNION SELECT DSC.PATH      AS PATH ,DSC.KEYEDPATH AS KEYEDPATH ,DSC.DTYPE     AS DTYPE ,DSC.DKEY1     AS DKEY1 ,DSC.DKEY2     AS DKEY2 ,DSC.DKEY3     AS DKEY3 ,DSC.DESCRIPTION AS DESCRIPTION ,INTEGER(0)            AS LEVEL ,''          AS DIRECTION ,'RT'        AS BTYPE ,VD.BCREATOR AS BKEY1 ,VD.BNAME    AS BKEY2 FROM DESCENDANTS DSC ,SYSIBM.SYSVIEWDEP VD WHERE DSC.LEVEL = 0 AND DSC.DTYPE IN ('MQ') AND VD.DCREATOR = DSC.DKEY1 AND VD.DNAME = DSC.DKEY2 AND VD.BTYPE = 'F' UNION SELECT DSC.PATH || '<-RO' ,DSC.KEYEDPATH || ' <--RO(' || RO.NAME  || ')' AS KEYEDPATH ,'RO' AS DTYPE ,RO.NAME AS DKEY1 ,''  AS DKEY2 ,''  AS DKEY3 ,'role'  AS DESCRIPTION ,INTEGER(1)   AS LEVEL ,'P' AS DIRECTION ,''  AS BTYPE ,''  AS BKEY1 ,''  AS BKEY2 FROM DESCENDANTS DSC ,SYSIBM.SYSOBJROLEDEP RD ,SYSIBM.SYSROLES   RO WHERE LEVEL = 0 AND DSC.BTYPE  = 'TS' AND RO.NAME = RD.ROLENAME AND RD.DSCHEMA = DSC.DKEY1 AND RD.DNAME = DSC.DKEY2 AND RD.DTYPE = 'T' ) UNION ALL SELECT ASC.PATH  || '<-' || ASC.BTYPE ,ASC.KEYEDPATH || ' <--' || ASC.BTYPE || '(' || ASC.BKEY1 || ',' || ASC.BKEY2 || ')' AS KEYEDPATH ,ASC.BTYPE   AS DTYPE ,ASC.BKEY1   AS DKEY1 ,ASC.BKEY2   AS DKEY2 ,''          AS DKEY3 ,CASE ASC.BTYPE WHEN 'VW' THEN 'view' WHEN 'MQ' THEN 'MQT' ELSE '--> error <-- ' || ASC.BTYPE END         AS DESCRIPTION ,ASC.LEVEL+1 AS LEVEL ,'P'         AS DIRECTION ,CASE VD.BTYPE WHEN 'F' THEN 'RT' WHEN 'M' THEN 'MQ' WHEN 'T' THEN 'TB' WHEN 'V' THEN 'VW' WHEN 'G' THEN 'GT' ELSE '?' || VD.BTYPE END         AS BTYPE ,VD.BCREATOR AS BKEY1 ,VD.BNAME    AS BKEY2 FROM ASCENDANTS ASC ,SYSIBM.SYSVIEWDEP VD WHERE ASC.LEVEL < 20 AND ASC.BTYPE IN ('VW','MQ','GT') AND VD.DCREATOR = ASC.BKEY1 AND VD.DNAME = ASC.BKEY2 UNION ALL SELECT ASC.PATH || '<-RT' ,ASC.KEYEDPATH || ' <--RT(' || ASC.BKEY1 || ',' || ASC.BKEY2 || ',F)' AS KEYEDPATH ,'RT'      AS DTYPE ,ASC.BKEY1 AS DKEY1 ,ASC.BKEY2 AS DKEY2 ,'F'       AS DKEY3 ,'routine sourced function' AS DESCRIPTION ,ASC.LEVEL+1 AS LEVEL ,'P'       AS DIRECTION ,CASE RT.SOURCESCHEMA WHEN 'SYSIBM' THEN '' ELSE 'RT' END       AS BTYPE ,CASE RT.SOURCESCHEMA WHEN 'SYSIBM' THEN '' ELSE RT.SOURCESCHEMA END       AS BKEY1 ,CASE RT.SOURCESPECIFIC WHEN 'SYSIBM' THEN '' ELSE RT.SOURCESPECIFIC END       AS BKEY2 FROM ASCENDANTS ASC ,SYSIBM.SYSROUTINES RT WHERE ASC.LEVEL < 20 AND ASC.BTYPE IN ('RT') AND RT.ROUTINETYPE = 'F' AND RT.ORIGIN = 'U' AND RT.SCHEMA = ASC.BKEY1 AND RT.SPECIFICNAME = ASC.BKEY2 UNION ALL SELECT ASC.PATH || '<-RT' ,ASC.KEYEDPATH || ' <--RT(' || ASC.BKEY1 || ',' || ASC.BKEY2 || ',F)' AS KEYEDPATH ,'RT'        AS DTYPE ,ASC.BKEY1   AS DKEY1 ,ASC.BKEY2   AS DKEY2 ,'F'         AS DKEY3 ,'routine SQL function' AS DESCRIPTION ,ASC.LEVEL+1 AS LEVEL ,'P'         AS DIRECTION ,'RT'        AS BTYPE ,VD.BCREATOR AS BKEY1 ,VD.BNAME    AS BKEY2 FROM ASCENDANTS ASC ,SYSIBM.SYSROUTINES RT ,SYSIBM.SYSVIEWDEP VD WHERE ASC.LEVEL < 20 AND ASC.BTYPE IN ('RT') AND RT.SCHEMA = ASC.BKEY1 AND RT.SPECIFICNAME = ASC.BKEY2 AND RT.ROUTINETYPE = 'F' AND RT.ORIGIN = 'Q' AND VD.DCREATOR = RT.SCHEMA AND VD.DNAME = RT.SPECIFICNAME AND VD.BTYPE = 'F' UNION ALL SELECT ASC.PATH || '<-RT' ,ASC.KEYEDPATH || ' <--RT(' || ASC.BKEY1 || ',' || ASC.BKEY2 || ',F)' AS KEYEDPATH ,'RT'      AS DTYPE ,ASC.BKEY1 AS DKEY1 ,ASC.BKEY2 AS DKEY2 ,'F'       AS DKEY3 ,'routine' AS DESCRIPTION ,ASC.LEVEL+1 AS LEVEL ,'P' AS DIRECTION ,''  AS BTYPE ,''  AS BKEY1 ,''  AS BKEY2 FROM ASCENDANTS ASC ,SYSIBM.SYSROUTINES RT WHERE ASC.LEVEL < 20 AND ASC.BTYPE = 'RT' AND RT.SCHEMA = ASC.BKEY1 AND RT.SPECIFICNAME = ASC.BKEY2 AND NOT (RT.ROUTINETYPE = 'F' AND (RT.ORIGIN = 'U' OR (RT.ORIGIN = 'Q' AND EXISTS (SELECT * FROM SYSIBM.SYSVIEWDEP WHERE DCREATOR = ASC.BKEY1 AND DNAME = ASC.BKEY2 ) ) ) ) UNION ALL SELECT ASC.PATH || '<-RT' ,ASC.KEYEDPATH || ' <--RT(' || ASC.BKEY1 || ',' || ASC.BKEY2 || ',F)' AS KEYEDPATH ,'RT'        AS DTYPE ,ASC.BKEY1   AS DKEY1 ,ASC.BKEY2   AS DKEY2 ,'F'         AS DKEY3 ,'routine'   AS DESCRIPTION ,ASC.LEVEL+1 AS LEVEL ,'P'         AS DIRECTION ,'SQ'        AS BTYPE ,SD.BSCHEMA  AS BKEY1 ,SD.BNAME    AS BKEY2 FROM ASCENDANTS ASC ,SYSIBM.SYSROUTINES RT ,SYSIBM.SYSSEQUENCESDEP SD WHERE ASC.LEVEL < 20 AND ASC.BTYPE IN ('RT') AND RT.SCHEMA       = ASC.BKEY1 AND RT.SPECIFICNAME = ASC.BKEY2 AND RT.ROUTINETYPE  = 'F' AND RT.ORIGIN       = 'Q' AND SD.DCREATOR = ASC.BKEY1 AND SD.DNAME    = ASC.BKEY2 UNION ALL SELECT ASC.PATH || '<-CT' AS PATH ,ASC.KEYEDPATH || ' <--CT(' || ASC.BKEY1 || ',' || ASC.BKEY2 || ')' AS KEYEDPATH ,'CT'         AS DTYPE ,ASC.BKEY1    AS DKEY1 ,ASC.BKEY2    AS DKEY2 ,''           AS DKEY3 ,'clone table' AS DESCRIPTION ,ASC.LEVEL+1  AS LEVEL ,'P'          AS DIRECTION ,'TB'         AS BTYPE ,TB.TBCREATOR AS BKEY1 ,TB.TBNAME    AS BKEY2 FROM ASCENDANTS ASC ,SYSIBM.SYSTABLES TB WHERE ASC.LEVEL < 20 AND ASC.DTYPE IN('MQ') AND TB.TYPE IN ('C') AND TB.CREATOR = ASC.BKEY1 AND TB.NAME = ASC.BKEY2 AND TB.TBCREATOR <> '' AND TB.TBNAME <> '' UNION ALL SELECT ASC.PATH || '<-HT' AS PATH ,ASC.KEYEDPATH || ' <--HT(' || ASC.BKEY1 || ',' || ASC.BKEY2 || ')' AS KEYEDPATH ,'HT'  AS DTYPE ,ASC.BKEY1 AS DKEY1 ,ASC.BKEY2 AS DKEY2 ,''    AS DKEY3 ,'history table' AS DESCRIPTION ,ASC.LEVEL+1 AS LEVEL ,'P'   AS DIRECTION ,'TB' AS BTYPE ,TB.VERSIONING_SCHEMA AS BKEY1 ,TB.VERSIONING_TABLE  AS BKEY2 FROM ASCENDANTS ASC ,SYSIBM.SYSTABLES TB WHERE ASC.LEVEL < 20 AND ASC.DTYPE IN('MQ') AND TB.TYPE IN ('H') AND TB.CREATOR = ASC.BKEY1 AND TB.NAME = ASC.BKEY2 AND TB.VERSIONING_SCHEMA <> '' AND TB.VERSIONING_TABLE <> '' UNION ALL SELECT ASC.PATH || '<-TB' ,ASC.KEYEDPATH || ' <--TB(' || ASC.BKEY1 || ',' || ASC.BKEY2 || ')' AS KEYEDPATH ,'TB'        AS DTYPE ,ASC.BKEY1   AS DKEY1 ,ASC.BKEY2   AS DKEY2 ,''          AS DKEY3 ,'table'     AS DESCRIPTION ,ASC.LEVEL+1 AS LEVEL ,'P'         AS DIRECTION ,'TS'        AS BTYPE ,TB.DBNAME   AS BKEY1 ,TB.TSNAME   AS BKEY2 FROM ASCENDANTS ASC ,SYSIBM.SYSTABLES TB WHERE ASC.LEVEL < 20 AND ASC.BTYPE = 'TB' AND TB.CREATOR = ASC.BKEY1 AND TB.NAME = ASC.BKEY2 UNION ALL SELECT ASC.PATH || '<-TS' ,ASC.KEYEDPATH || ' <--TS(' || ASC.BKEY1 || ',' || ASC.BKEY2 || ')' AS KEYEDPATH ,'TS'          AS DTYPE ,ASC.BKEY1     AS DKEY1 ,ASC.BKEY2     AS DKEY2 ,''            AS DKEY3 ,'table space' AS DESCRIPTION ,ASC.LEVEL+1   AS LEVEL ,'P'           AS DIRECTION ,'DB'          AS BTYPE ,ASC.BKEY1     AS BKEY1 ,''            AS BKEY2 FROM ASCENDANTS ASC WHERE ASC.LEVEL < 20 AND ASC.BTYPE = 'TS' UNION ALL SELECT ASC.PATH || '<-RO' ,ASC.KEYEDPATH || ' <--RO(' || RO.NAME || ')' AS KEYEDPATH ,'RO' AS DTYPE ,RO.NAME AS DKEY1 ,''  AS DKEY2 ,''  AS DKEY3 ,'role'  AS DESCRIPTION ,ASC.LEVEL+1 AS LEVEL ,'P' AS DIRECTION ,''  AS BTYPE ,''  AS BKEY1 ,''  AS BKEY2 FROM ASCENDANTS ASC ,SYSIBM.SYSOBJROLEDEP RD ,SYSIBM.SYSROLES   RO WHERE ASC.LEVEL < 20 AND RO.NAME    = RD.ROLENAME AND RD.DSCHEMA = ASC.DKEY1 AND RD.DNAME   = ASC.DKEY2 AND RD.DTYPE   = (CASE ASC.DTYPE WHEN 'TB' THEN 'T' WHEN 'TS' THEN 'R' WHEN 'MQ' THEN 'M' WHEN 'VW' THEN 'V' WHEN 'SQ' THEN 'Q' WHEN 'RT' THEN 'F' ELSE '' END) UNION ALL SELECT ASC.PATH || '<-DB' ,ASC.KEYEDPATH || ' <--DB(' || ASC.BKEY1 || ')' AS KEYEDPATH ,'DB'        AS DTYPE ,ASC.BKEY1   AS DKEY1 ,''          AS DKEY2 ,''          AS DKEY3 ,'database'  AS DESCRIPTION ,ASC.LEVEL+1 AS LEVEL ,'P'         AS DIRECTION ,'SG'        AS BTYPE , DB.STGROUP AS BKEY1 ,''          AS BKEY2 FROM ASCENDANTS ASC ,SYSIBM.SYSDATABASE DB WHERE ASC.LEVEL < 20 AND ASC.BTYPE = 'DB' AND DB.NAME = ASC.BKEY1 AND DB.STGROUP <> '' UNION ALL SELECT ASC.PATH || '<-' || ASC.BTYPE ,ASC.KEYEDPATH || ' <--' || ASC.BTYPE || '(' || CASE ASC.BTYPE WHEN 'SG' THEN ASC.BKEY1 || ')' ELSE ASC.BKEY1 || ',' || ASC.BKEY2 || ')' END AS KEYEDPATH ,ASC.BTYPE AS DTYPE ,ASC.BKEY1 AS DKEY1 ,ASC.BKEY2 AS DKEY2 ,''        AS DKEY3 ,CASE ASC.BTYPE WHEN 'SG' THEN 'storage group' WHEN 'SQ' THEN 'sequence' ELSE '--> error <-- ' || ASC.BTYPE END          AS DESCRIPTION ,ASC.LEVEL+1 AS LEVEL ,'P' AS DIRECTION ,''  AS BTYPE ,''  AS BKEY1 ,''  AS BKEY2 FROM ASCENDANTS ASC WHERE ASC.LEVEL < 20 AND ASC.BTYPE IN('SG','SQ') UNION ALL SELECT ASC.PATH || '<-RO' ,ASC.KEYEDPATH || ' <--RO(' || RO.NAME   || ')' AS KEYEDPATH ,'RO' AS DTYPE ,RO.NAME AS DKEY1 ,''  AS DKEY2 ,''  AS DKEY3 ,'role'  AS DESCRIPTION ,ASC.LEVEL+1 AS LEVEL ,'P' AS DIRECTION ,''  AS BTYPE ,''  AS BKEY1 ,''  AS BKEY2 FROM ASCENDANTS ASC ,SYSIBM.SYSOBJROLEDEP RD ,SYSIBM.SYSROLES RO WHERE ASC.LEVEL < 20 AND RO.NAME    = RD.ROLENAME AND RD.DSCHEMA = '' AND RD.DNAME   = ASC.DKEY1 AND RD.DTYPE   = (CASE ASC.DTYPE WHEN 'DB' THEN 'D' WHEN 'SG' THEN 'S' WHEN 'RO' THEN 'L' ELSE '' END) ) ,TBRTDT ( DTDKEY1 ,DTDKEY2 ,DTDTYPE ,DTBKEY1 ,DTBKEY2 ) AS ( SELECT DISTINCT CO.TBCREATOR  AS DTDKEY1 ,CO.TBNAME     AS DTDKEY2 ,'TB'          AS DTDTYPE ,CO.TYPESCHEMA AS DTBKEY1 ,CO.TYPENAME   AS DTBKEY2 FROM DESCENDANTS DSC ,SYSIBM.SYSCOLUMNS CO WHERE DSC.DTYPE IN ('CT','HT','MQ','XT','TB','AT','GT') AND DSC.LEVEL = 0 AND CO.TBCREATOR = DSC.DKEY1 AND CO.TBNAME    = DSC.DKEY2 AND CO.COLTYPE   = 'DISTINCT' UNION SELECT DISTINCT CO.TBCREATOR  AS DTDKEY1 ,CO.TBNAME     AS DTDKEY2 ,'TB'          AS DTDTYPE ,CO.TYPESCHEMA AS DTBKEY1 ,CO.TYPENAME   AS DTBKEY2 FROM ASCENDANTS ASC ,SYSIBM.SYSCOLUMNS CO WHERE ASC.BTYPE IN ('CT','HT','MQ','XT','TB','AT','GT','VW') AND CO.TBCREATOR = ASC.BKEY1 AND CO.TBNAME    = ASC.BKEY2 AND CO.COLTYPE   = 'DISTINCT' UNION SELECT DISTINCT PM.SCHEMA       AS DTDKEY1 ,PM.SPECIFICNAME AS DTDKEY2 ,'RT'            AS DTDTYPE ,PM.TYPESCHEMA   AS DTBKEY1 ,PM.TYPENAME     AS DTBKEY2 FROM ASCENDANTS ASC ,SYSIBM.SYSPARMS PM WHERE ASC.BTYPE IN ('RT') AND PM.SCHEMA = ASC.BKEY1 AND PM.SPECIFICNAME = ASC.BKEY2 AND PM.SOURCETYPEID <> 0 UNION SELECT DISTINCT SQ.SCHEMA       AS DTDKEY1 ,SQ.NAME         AS DTDKEY2 ,'SQ'            AS DTDTYPE ,DT.SCHEMA       AS DTBKEY1 ,DT.NAME         AS DTBKEY2 FROM ASCENDANTS ASC ,SYSIBM.SYSSEQUENCES SQ ,SYSIBM.SYSDATATYPES DT WHERE ASC.DTYPE IN ('SQ') AND SQ.SCHEMA = ASC.DKEY1 AND SQ.NAME   = ASC.DKEY2 AND SQ.DATATYPEID = DT.DATATYPEID AND SQ.SOURCETYPEID <> 0 ) ,IXTSPARTSG ( SGDKEY1 ,SGDKEY2 ,SGDTYPE ,SGBKEY1 ) AS ( SELECT TP.DBNAME   AS SGDKEY1 ,TP.TSNAME   AS SGDKEY2 ,'TS'        AS SGDTYPE ,TP.STORNAME AS SGBKEY1 FROM ASCENDANTS ASC ,SYSIBM.SYSTABLEPART TP WHERE ASC.DTYPE = 'TS' AND TP.DBNAME = ASC.DKEY1 AND TP.TSNAME = ASC.DKEY2 AND TP.STORTYPE = 'I' AND TP.STORNAME <> '' ) ,ASCENDANTS2 ( PATH ,KEYEDPATH ,DTYPE ,DKEY1 ,DKEY2 ,DKEY3 ,DESCRIPTION ,LEVEL ,DIRECTION ,BTYPE ,BKEY1 ,BKEY2 ) AS ( ( SELECT ASC.PATH ,ASC.KEYEDPATH || '-part' AS KEYEDPATH ,'TS'        AS DTYPE ,ASC.DKEY1   AS DKEY1 ,ASC.DKEY2   AS DKEY2 ,''          AS DKEY3 ,'table space part' AS DESCRIPTION ,ASC.LEVEL+1 AS LEVEL ,'P'         AS DIRECTION ,'SG'        AS BTYPE ,TSG.SGBKEY1 AS BKEY1 ,''          AS BKEY2 FROM ASCENDANTS ASC ,IXTSPARTSG TSG WHERE ASC.DTYPE = 'TS' AND TSG.SGDTYPE = 'TS' AND TSG.SGDKEY1 = ASC.DKEY1 AND TSG.SGDKEY2 = ASC.DKEY2 UNION SELECT DSC.PATH ,DSC.KEYEDPATH ,DSC.DTYPE   AS DTYPE ,DSC.DKEY1   AS DKEY1 ,DSC.DKEY2   AS DKEY2 ,''          AS DKEY3 ,DSC.DESCRIPTION AS DESCRIPTION ,INTEGER(0)            AS LEVEL ,''          AS DIRECTION ,'DT'        AS BTYPE ,TDT.DTBKEY1 AS BKEY1 ,TDT.DTBKEY2 AS BKEY2 FROM DESCENDANTS DSC ,TBRTDT TDT WHERE DSC.DTYPE IN ('CT','HT','MQ','XT','TB','AT','GT') AND TDT.DTDTYPE = 'TB' AND TDT.DTDKEY1 = DSC.DKEY1 AND TDT.DTDKEY2 = DSC.DKEY2 UNION SELECT ASC.PATH || '<-' || ASC.BTYPE ,ASC.KEYEDPATH || ' <--' || ASC.BTYPE || '(' || ASC.BKEY1 || ',' || ASC.BKEY2 || ')' AS KEYEDPATH ,ASC.BTYPE   AS DTYPE ,ASC.BKEY1   AS DKEY1 ,ASC.BKEY2   AS DKEY2 ,''          AS DKEY3 ,'table'     AS DESCRIPTION ,ASC.LEVEL+1 AS LEVEL ,'P'         AS DIRECTION ,'DT'        AS BTYPE ,TDT.DTBKEY1 AS BKEY1 ,TDT.DTBKEY2 AS BKEY2 FROM ASCENDANTS ASC ,TBRTDT TDT WHERE ASC.BTYPE IN ('CT','HT','MQ','XT','TB','AT','GT','VW') AND TDT.DTDTYPE = 'TB' AND TDT.DTDKEY1 = ASC.BKEY1 AND TDT.DTDKEY2 = ASC.BKEY2 UNION SELECT ASC.PATH || '<-RT' ,ASC.KEYEDPATH || ' <--RT(' || ASC.BKEY1 || ',' || ASC.BKEY2 || ',F)' AS KEYEDPATH ,'RT'        AS DTYPE ,ASC.BKEY1   AS DKEY1 ,ASC.BKEY2   AS DKEY2 ,'F'         AS DKEY3 ,'routine'   AS DESCRIPTION ,ASC.LEVEL+1 AS LEVEL ,'P'         AS DIRECTION ,'DT'        AS BTYPE ,TDT.DTBKEY1 AS BKEY1 ,TDT.DTBKEY2 AS BKEY2 FROM ASCENDANTS ASC ,TBRTDT TDT WHERE ASC.BTYPE = 'RT' AND TDT.DTDTYPE = 'RT' AND TDT.DTDKEY1 = ASC.BKEY1 AND TDT.DTDKEY2 = ASC.BKEY2 UNION SELECT ASC.PATH ,ASC.KEYEDPATH AS KEYEDPATH ,'SQ'        AS DTYPE ,ASC.DKEY1   AS DKEY1 ,ASC.DKEY2   AS DKEY2 ,''          AS DKEY3 ,'sequence'  AS DESCRIPTION ,ASC.LEVEL   AS LEVEL ,'P'         AS DIRECTION ,'DT'        AS BTYPE ,TDT.DTBKEY1 AS BKEY1 ,TDT.DTBKEY2 AS BKEY2 FROM ASCENDANTS ASC ,TBRTDT TDT WHERE ASC.DTYPE = 'SQ' AND TDT.DTDTYPE = 'SQ' AND TDT.DTDKEY1 = ASC.DKEY1 AND TDT.DTDKEY2 = ASC.DKEY2 ) UNION ALL SELECT ASC.PATH || '<-' || ASC.BTYPE ,ASC.KEYEDPATH || ' <--' || ASC.BTYPE || '(' || CASE ASC.BTYPE WHEN 'SG' THEN ASC.BKEY1 || ')' ELSE ASC.BKEY1 || ',' || ASC.BKEY2 || ')' END  AS KEYEDPATH ,ASC.BTYPE AS DTYPE ,ASC.BKEY1 AS DKEY1 ,ASC.BKEY2 AS DKEY2 ,''        AS DKEY3 ,CASE ASC.BTYPE WHEN 'SG' THEN 'storage group' WHEN 'DT' THEN 'distinct type' ELSE '--> error <-- ' || ASC.BTYPE END    AS DESCRIPTION ,ASC.LEVEL+1 AS LEVEL ,'P' AS DIRECTION ,''  AS BTYPE ,''  AS BKEY1 ,''  AS BKEY2 FROM ASCENDANTS2 ASC WHERE ASC.LEVEL < 20 AND ASC.BTYPE IN('SG','DT') UNION ALL SELECT ASC.PATH || '<-RO' ,ASC.KEYEDPATH || ' <--RO(' || RO.NAME || ')' AS KEYEDPATH ,'RO' AS DTYPE ,RO.NAME AS DKEY1 ,''  AS DKEY2 ,''  AS DKEY3 ,'role' AS DESCRIPTION ,ASC.LEVEL+1 AS LEVEL ,'P' AS DIRECTION ,''  AS BTYPE ,''  AS BKEY1 ,''  AS BKEY2 FROM ASCENDANTS2 ASC ,SYSIBM.SYSOBJROLEDEP RD ,SYSIBM.SYSROLES RO WHERE ASC.LEVEL < 20 AND RO.NAME    = RD.ROLENAME AND RD.DSCHEMA = '' AND RD.DNAME   = ASC.DKEY1 AND RD.DTYPE   = (CASE ASC.DTYPE WHEN 'SG' THEN 'S' WHEN 'RO' THEN 'L' ELSE '' END) UNION ALL SELECT ASC.PATH || '<-RO' ,ASC.KEYEDPATH || ' <--RO(' || RO.NAME || ')' ,'RO' AS DTYPE ,RO.NAME AS DKEY1 ,''   AS DKEY2 ,''   AS DKEY3 ,'role'  AS DESCRIPTION ,ASC.LEVEL+1 AS LEVEL ,'P' AS DIRECTION ,''  AS BTYPE ,''  AS BKEY1 ,''  AS BKEY2 FROM ASCENDANTS2 ASC ,SYSIBM.SYSOBJROLEDEP RD ,SYSIBM.SYSROLES RO WHERE ASC.LEVEL < 20 AND RO.NAME    = RD.ROLENAME AND RD.DSCHEMA = ASC.DKEY1 AND RD.DNAME   = ASC.DKEY2 AND RD.DTYPE   = 'E' ) ,FAMILY ( PATH ,KEYEDPATH ,DTYPE ,DKEY1 ,DKEY2 ,DKEY3 ,DESCRIPTION ,LEVEL ,RELATIONSHIP_TYPE ,BTYPE ,BKEY1 ,BKEY2 ) AS ( SELECT DSC.* FROM DESCENDANTS DSC UNION SELECT ASC.* FROM ASCENDANTS ASC UNION SELECT ASC2.* FROM ASCENDANTS2 ASC2 ) ,COUNTS (DTYPE ,COUNT) AS ( SELECT DTYPE, COUNT(*) FROM FAMILY GROUP BY DTYPE ) ,DISTINCTCOUNTS ( DTYPE ,COUNT ) AS ( SELECT DTYPE, COUNT(*) FROM (SELECT DISTINCT DTYPE, DKEY1, DKEY2, DKEY3 FROM FAMILY) T GROUP BY DTYPE ) ,NONZEROCOUNTS ( PATH ,KEYEDPATH ,DTYPE ,DKEY1 ,DKEY2 ,DKEY3 ,DESCRIPTION ,LEVEL ,RELATIONSHIP_TYPE ,BTYPE ,BKEY1 ,BKEY2 ) AS ( SELECT CAST('* ' || CASE CT.DTYPE WHEN 'SG' THEN 'SG - Storage group . . . . . . . . . .' || ' . . . ' WHEN 'DB' THEN 'DB - Database. . . . . . . . . . . . .' || ' . . . . ' WHEN 'TS' THEN 'TS - Table space . . . . . . . . . . .' || ' . . . . .' WHEN 'TB' THEN 'TB - Table . . . . . . . . . . . . . .' || ' . . . . . . .' WHEN 'UC' THEN 'UC - Unique.constraint . . . . . . . .' || ' . . .' WHEN 'Rc' THEN 'Rc - Referential constraint, child . .' || ' .' WHEN 'Rp' THEN 'Rp - Referential constraint, parent. .' WHEN 'CC' THEN 'CC - Check constraint. . . . . . . . .' || ' . . ' WHEN 'RP' THEN 'RP - Row permission. . . . . . . . . .' || ' . . ' WHEN 'CM' THEN 'CM - Column mask . . . . . . . . . . .' || ' . . . ' WHEN 'AT' THEN 'AT - Auxiliary table . . . . . . . . .' || ' . . . . ' WHEN 'CT' THEN 'CT - Clone table . . . . . . . . . . .' || ' . . . . .' WHEN 'GT' THEN 'GT - Global temporary table. . . . . .' || ' ' WHEN 'HT' THEN 'HT - History table . . . . . . . . . .' || ' . . . . .' WHEN 'XT' THEN 'XT - XML table . . . . . . . . . . . .' || ' . . . . . .' WHEN 'MQ' THEN 'MQ - Materialized query table. . . . .' || ' . ' WHEN 'IX' THEN 'IX - Index . . . . . . . . . . . . . .' || ' . . . . . . .' WHEN 'VW' THEN 'VW - View. . . . . . . . . . . . . . .' || ' . . . . . ' WHEN 'SY' THEN 'SY - Synonym . . . . . . . . . . . . .' || ' . . . . ' WHEN 'AL' THEN 'AL - Alias . . . . . . . . . . . . . .' || ' . . . . . .' WHEN 'TG' THEN 'TG - Trigger . . . . . . . . . . . . .' || ' . . . . . . ' WHEN 'SQ' THEN 'SQ - Sequence. . . . . . . . . . . . .' || ' . . . . .' WHEN 'RT' THEN 'RT - Routine . . . . . . . . . . . . .' || ' . . . . . . ' WHEN 'DT' THEN 'DT - Distinct type . . . . . . . . . .' || ' . . . . .' WHEN 'PK' THEN 'PK - Package . . . . . . . . . . . . .' || ' . . . . .' WHEN 'PL' THEN 'PL - Plan. . . . . . . . . . . . . . .' || ' . . . . . ' WHEN 'RO' THEN 'RO - Role. . . . . . . . . . . . . . .' || ' . . . . . ' ELSE '--> error, unexpected dependent type=' || CT.DTYPE END || ' Count = ' || CHAR(DT.COUNT) AS VARCHAR(128))       AS PATH ,CAST('* ' || CASE CT.DTYPE WHEN 'SG' THEN 'SG(name)' WHEN 'DB' THEN 'DB(name)' WHEN 'TS' THEN 'TS(dbname, name)' WHEN 'TB' THEN 'TB(creator,name)' WHEN 'UC' THEN 'UC(name, tbcreator, tbname)' WHEN 'Rc' THEN 'Rc(name, tbcreator, tbname)' WHEN 'Rp' THEN 'Rp(name, tbcreator, tbname)' WHEN 'CC' THEN 'CC(name, tbcreator, tbname)' WHEN 'RP' THEN 'RP(schema, name)' WHEN 'CM' THEN 'CM(schema, name)' WHEN 'AT' THEN 'AT(creator, name)' WHEN 'CT' THEN 'CT(creator, name)' WHEN 'GT' THEN 'GT(creator, name)' WHEN 'HT' THEN 'HT(creator, name)' WHEN 'XT' THEN 'XT(creator, name)' WHEN 'MQ' THEN 'MQ(creator, name)' WHEN 'IX' THEN 'IX(creator, name)' WHEN 'VW' THEN 'VW(creator, name)' WHEN 'SY' THEN 'SY(creator, name)' WHEN 'AL' THEN 'AL(creator, name)' WHEN 'TG' THEN 'TG(schema, name)' WHEN 'SQ' THEN 'SQ(schema, name)' WHEN 'RT' THEN 'RT(schema, specificname, type)' WHEN 'DT' THEN 'DT(schema, name)' WHEN 'PK' THEN 'PK(collid, name, contoken) ' WHEN 'PL' THEN 'PL(name)' WHEN 'RO' THEN 'RO(name)' ELSE '--> error, unexpected dependent type=' || CT.DTYPE END AS VARCHAR(7400))      AS KEYEDPATH ,CAST('' AS CHAR(2)     ) AS DTYPE ,CAST('' AS VARCHAR(128)) AS DKEY1 ,CAST('' AS VARCHAR(128)) AS DKEY2 ,CAST('' AS VARCHAR(128)) AS DKEY3 ,CAST('' AS VARCHAR(128)) AS DESCRIPTION ,CAST(0  AS INTEGER     ) AS LEVEL ,CAST('' AS CHAR(1)     ) AS RELATIONSHIP_TYPE ,CAST('' AS CHAR(2)     ) AS BTYPE ,CAST('' AS VARCHAR(128)) AS BKEY1 ,CAST('' AS VARCHAR(128)) AS BKEY2 FROM COUNTS CT ,DISTINCTCOUNTS DT WHERE CT.COUNT > 0 AND CT.DTYPE = DT.DTYPE ) SELECT PATH , KEYEDPATH , DTYPE , DKEY1 , DKEY2 , DKEY3 , DESCRIPTION , CHAR(LEVEL) AS LEVEL , RELATIONSHIP_TYPE , BTYPE , BKEY1 , BKEY2 FROM NONZEROCOUNTS UNION SELECT '*# Total objects = ' || CHAR(SUM(COUNT)) AS PATH , '' AS KEYEDPATH , '' AS DTYPE , '' AS DKEY1 , '' AS DKEY2 , '' AS DKEY3 , '' AS DESCRIPTION , '' AS LEVEL , '' AS RELATIONSHIP_TYPE , '' AS BTYPE , '' AS BKEY1 , '' AS BKEY2 FROM DISTINCTCOUNTS UNION SELECT PATH , KEYEDPATH , DTYPE , DKEY1 , DKEY2 , DKEY3 , DESCRIPTION , CHAR(LEVEL) AS LEVEL , RELATIONSHIP_TYPE , BTYPE , BKEY1 , BKEY2 FROM FAMILY;    ",
        "type": "PREPARE",
        "subtype": "SELECT",
        "repeat": 1,
        "args": [
          {
            "value": "SYSIBM",
            "type": "static",
            "datatype": "varchar"
          },
          {
            "value": "SYSCOLUMNS",
            "type": "static",
            "datatype": "varchar"
          }
        ]
      }
    ]
  }
}