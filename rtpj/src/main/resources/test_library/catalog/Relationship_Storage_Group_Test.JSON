{
  "test": {
    "description": "This test returns the object dependency report for a storage group in parallel over 5 threads.",
    "connection": {
      "ssid": "DH0G",
      "userid": "QADBA01"
    },
    "threading": {
      "threads": 5,
      "parallel": "true"
    },
    "statements": [
      {
        "text": "SET CURRENT DEGREE='ANY'",
        "type": "IMMEDIATE",
        "subtype": "SELECT",
        "repeat": 1
      },
      {
        "text": "WITH DESCENDANTS ( PATH ,KEYEDPATH ,DTYPE ,DKEY1 ,DKEY2 ,DKEY3 ,DESCRIPTION ,LEVEL ,DIRECTION ,BTYPE ,BKEY1 ,BKEY2 ) AS ( ( SELECT CAST('SG' AS VARCHAR(128))        AS PATH ,CAST('SG' || '(' || SG.NAME    || ')' AS VARCHAR(7400))                AS KEYEDPATH ,CAST('SG' AS CHAR(2))             AS DTYPE ,CAST(SG.NAME AS VARCHAR(128))     AS DKEY1 ,CAST('' AS VARCHAR(128))          AS DKEY2 ,CAST('' AS VARCHAR(128))          AS DKEY3 ,CAST('* initial storage group *'  AS VARCHAR(128)) AS DESCRIPTION ,INTEGER(0)                                 AS LEVEL ,CAST('' AS VARCHAR(128))          AS DIRECTION ,CAST('' AS CHAR(2))               AS BTYPE ,CAST('' AS VARCHAR(128))          AS BKEY1 ,CAST('' AS VARCHAR(128))          AS BKEY2 FROM SYSIBM.SYSSTOGROUP SG WHERE SG.NAME = ? ) UNION ALL SELECT DSC.PATH || '->DB' AS PATH ,DSC.KEYEDPATH || '--> DB(' || DB.NAME   || ')' AS KEYEDPATH ,'DB'           AS DTYPE ,DB.NAME        AS DKEY1 ,''             AS DKEY2 ,''             AS DKEY3 ,'database'     AS DESCRIPTION ,DSC.LEVEL+1    AS LEVEL ,'C'            AS DIRECTION ,DSC.DTYPE      AS BTYPE ,DSC.DKEY1      AS BKEY1 ,DSC.DKEY2      AS BKEY2 FROM DESCENDANTS DSC ,SYSIBM.SYSDATABASE DB WHERE DSC.LEVEL < 20 AND DSC.DTYPE = 'SG' AND DB.STGROUP = DSC.DKEY1 ) ,ASCENDANTS ( PATH ,KEYEDPATH ,DTYPE ,DKEY1 ,DKEY2 ,DKEY3 ,DESCRIPTION ,LEVEL ,DIRECTION ,BTYPE ,BKEY1 ,BKEY2 ) AS ( ( SELECT DSC.PATH || '<-RO' ,DSC.KEYEDPATH  || ' <--RO(' || RO.NAME   || ')' AS KEYEDPATH ,'RO'            AS DTYPE ,RO.NAME         AS DKEY1 ,''              AS DKEY2 ,''              AS DKEY3 ,'role   '       AS DESCRIPTION ,INTEGER(1)               AS LEVEL ,'P'             AS DIRECTION ,''              AS BTYPE ,''              AS BKEY1 ,''              AS BKEY2 FROM DESCENDANTS DSC ,SYSIBM.SYSOBJROLEDEP RD ,SYSIBM.SYSROLES RO WHERE DSC.LEVEL = 0 AND RO.NAME    = RD.ROLENAME AND RD.DSCHEMA = '' AND RD.DNAME   = DSC.DKEY1 AND RD.DTYPE   = 'S' ) UNION ALL SELECT ASC.PATH || '<-RO' ,ASC.KEYEDPATH || ' <--RO(' || RO.NAME   || ')' AS KEYEDPATH ,'RO'            AS DTYPE ,RO.NAME         AS DKEY1 ,''              AS DKEY2 ,''              AS DKEY3 ,'role   '       AS DESCRIPTION ,ASC.LEVEL+1     AS LEVEL ,'P'             AS DIRECTION ,''              AS BTYPE ,''              AS BKEY1 ,''              AS BKEY2 FROM ASCENDANTS ASC ,SYSIBM.SYSOBJROLEDEP RD ,SYSIBM.SYSROLES RO WHERE ASC.LEVEL < 20 AND RO.NAME    = RD.ROLENAME AND RD.DSCHEMA = '' AND RD.DNAME   = ASC.DKEY1 AND RD.DTYPE   = 'L' ) ,IXTSPARTSG ( SGDKEY1 ,SGDKEY2 ,SGDTYPE ,SGBKEY1 ) AS ( SELECT TP.DBNAME       AS SGDKEY1 ,TP.TSNAME       AS SGDKEY2 ,'TS'            AS SGDTYPE ,TP.STORNAME     AS SGBKEY1 FROM DESCENDANTS DSC ,SYSIBM.SYSTABLEPART TP WHERE DSC.DTYPE = 'SG' AND TP.STORTYPE = 'I' AND TP.STORNAME = DSC.DKEY1 UNION SELECT IP.IXCREATOR    AS SGDKEY1 ,IP.IXNAME       AS SGDKEY2 ,'IX'            AS SGDTYPE ,IP.STORNAME     AS SGBKEY1 FROM DESCENDANTS DSC ,SYSIBM.SYSINDEXPART IP WHERE DSC.DTYPE = 'SG' AND IP.STORTYPE = 'I' AND IP.STORNAME = DSC.DKEY1 ) ,DESCENDANTS2 ( PATH ,KEYEDPATH ,DTYPE ,DKEY1 ,DKEY2 ,DKEY3 ,DESCRIPTION ,LEVEL ,DIRECTION ,BTYPE ,BKEY1 ,BKEY2 ) AS ( ( SELECT DSC.PATH || '->TS' AS PATH ,DSC.KEYEDPATH  || '--> TS(' || TS.DBNAME || ',' || TS.NAME   || ')' AS KEYEDPATH ,'TS'           AS DTYPE ,CAST(TS.DBNAME AS VARCHAR(128))  AS DKEY1 ,CAST(TS.NAME   AS VARCHAR(128))  AS DKEY2 ,CAST(''        AS VARCHAR(128))  AS DKEY3 ,'table space'  AS DESCRIPTION ,DSC.LEVEL+1    AS LEVEL ,'C'            AS DIRECTION ,'DB'           AS BTYPE ,DSC.DKEY1      AS BKEY1 ,''             AS BKEY2 FROM DESCENDANTS DSC ,SYSIBM.SYSTABLESPACE TS WHERE DSC.DTYPE     = 'DB' AND TS.DBNAME = DSC.DKEY1 UNION SELECT DSC.PATH || '->TS' AS PATH ,DSC.KEYEDPATH    || '--> TS(' || TSG.SGDKEY1 || ',' || TSG.SGDKEY2 || ')-part' AS KEYEDPATH ,'TS'        AS DTYPE ,TSG.SGDKEY1 AS DKEY1 ,TSG.SGDKEY2 AS DKEY2 ,''          AS DKEY3 ,'table space part' AS DESCRIPTION ,DSC.LEVEL+1 AS LEVEL ,'C'         AS DIRECTION ,'SG'        AS BTYPE ,DSC.DKEY1   AS BKEY1 ,''          AS BKEY2 FROM DESCENDANTS DSC ,IXTSPARTSG TSG WHERE DSC.DTYPE = 'SG' AND TSG.SGDTYPE = 'TS' AND TSG.SGBKEY1 = DSC.DKEY1 UNION SELECT DSC.PATH || '->IX' AS PATH ,DSC.KEYEDPATH    || '--> IX(' || TSG.SGDKEY1 || ',' || TSG.SGDKEY2 || ')-part' AS KEYEDPATH ,'IX'        AS DTYPE ,TSG.SGDKEY1 AS DKEY1 ,TSG.SGDKEY2 AS DKEY2 ,''          AS DKEY3 ,'index space part' AS DESCRIPTION ,DSC.LEVEL+1 AS LEVEL ,'C'         AS DIRECTION ,'SG'        AS BTYPE ,DSC.DKEY1   AS BKEY1 ,''          AS BKEY2 FROM DESCENDANTS DSC ,IXTSPARTSG TSG WHERE DSC.DTYPE = 'SG' AND TSG.SGDTYPE = 'IX' AND TSG.SGBKEY1 = DSC.DKEY1 ) UNION ALL SELECT DSC.PATH || '->' || CASE TB.TYPE WHEN 'C' THEN 'CT' WHEN 'H' THEN 'HT' WHEN 'M' THEN 'MQ' WHEN 'P' THEN 'XT' WHEN 'T' THEN 'TB' WHEN 'X' THEN 'AT' ELSE '??' END              AS PATH ,DSC.KEYEDPATH || '-->' || CASE TB.TYPE WHEN 'C' THEN 'CT' WHEN 'H' THEN 'HT' WHEN 'M' THEN 'MQ' WHEN 'P' THEN 'XT' WHEN 'T' THEN 'TB' WHEN 'X' THEN 'AT' ELSE '??' END || '(' || TB.CREATOR || ',' || TB.NAME    || ')' AS KEYEDPATH ,CASE TB.TYPE WHEN 'C' THEN 'CT' WHEN 'H' THEN 'HT' WHEN 'M' THEN 'MQ' WHEN 'P' THEN 'XT' WHEN 'T' THEN 'TB' WHEN 'X' THEN 'AT' ELSE '??' END         AS DTYPE ,TB.CREATOR  AS DKEY1 ,TB.NAME     AS DKEY2 ,''          AS DKEY3 ,CASE TB.TYPE WHEN 'C' THEN 'clone table' WHEN 'H' THEN 'history table' WHEN 'M' THEN 'materialized query table' WHEN 'P' THEN 'implicitly created XML table' WHEN 'T' THEN 'table' WHEN 'X' THEN 'auxiliary table' ELSE '??' END         AS DESCRIPTION ,DSC.LEVEL+1 AS LEVEL ,'C'         AS DIRECTION ,'TS'        AS BTYPE ,DSC.DKEY1   AS BKEY1 ,DSC.DKEY2   AS BKEY2 FROM DESCENDANTS2 DSC ,SYSIBM.SYSTABLES TB WHERE DSC.LEVEL < 20 AND DSC.DTYPE = 'TS' AND TB.TYPE   IN ('T','M','C','H','P','X') AND TB.DBNAME = DSC.DKEY1 AND TB.TSNAME = DSC.DKEY2 UNION ALL SELECT DSC.PATH || '->CT' AS PATH ,DSC.KEYEDPATH || '--> CT(' || TB.TBCREATOR   || ',' || TB.TBNAME      || ')' AS KEYEDPATH ,'CT'         AS DTYPE ,TB.TBCREATOR AS DKEY1 ,TB.TBNAME    AS DKEY2 ,''           AS DKEY3 ,'clone table' AS DESCRIPTION ,DSC.LEVEL+1  AS LEVEL ,'C'          AS DIRECTION ,DSC.DTYPE    AS BTYPE ,DSC.DKEY1    AS BKEY1 ,DSC.DKEY2    AS BKEY2 FROM DESCENDANTS2 DSC ,SYSIBM.SYSTABLES TB WHERE DSC.LEVEL < 20 AND DSC.DTYPE IN('TB') AND TB.CREATOR = DSC.DKEY1 AND TB.NAME = DSC.DKEY2 AND TB.TBCREATOR <> '' AND TB.TBNAME <> '' UNION ALL SELECT DSC.PATH || '->XT' AS PATH ,DSC.KEYEDPATH || '--> XT(' || TB.CREATOR           || ',' || TB.NAME              || ')' AS KEYEDPATH ,'XT'        AS DTYPE ,TB.CREATOR  AS DKEY1 ,TB.NAME     AS DKEY2 ,''          AS DKEY3 ,'implicitly created XML table' AS DESCRIPTION ,DSC.LEVEL+1 AS LEVEL ,'C'         AS DIRECTION ,DSC.DTYPE   AS BTYPE ,DSC.DKEY1   AS BKEY1 ,DSC.DKEY2   AS BKEY2 FROM DESCENDANTS2 DSC ,SYSIBM.SYSTABLES TB ,SYSIBM.SYSXMLRELS XR WHERE DSC.LEVEL < 20 AND DSC.DTYPE IN('TB','HT') AND XR.TBOWNER = DSC.DKEY1 AND XR.TBNAME = DSC.DKEY2 AND TB.CREATOR = XR.XMLTBOWNER AND TB.NAME = XR.XMLTBNAME UNION ALL SELECT DSC.PATH || '->HT' AS PATH ,DSC.KEYEDPATH || '--> HT(' || TB.VERSIONING_SCHEMA || ',' || TB.VERSIONING_TABLE  || ')' AS KEYEDPATH ,'HT'        AS DTYPE ,TB.VERSIONING_SCHEMA AS DKEY1 ,TB.VERSIONING_TABLE AS DKEY2 ,''          AS DKEY3 ,'history table' AS DESCRIPTION ,DSC.LEVEL+1 AS LEVEL ,'C'         AS DIRECTION ,DSC.DTYPE   AS BTYPE ,DSC.DKEY1   AS BKEY1 ,DSC.DKEY2   AS BKEY2 FROM DESCENDANTS2 DSC ,SYSIBM.SYSTABLES TB WHERE DSC.LEVEL < 20 AND DSC.DTYPE IN('TB') AND TB.CREATOR = DSC.DKEY1 AND TB.NAME = DSC.DKEY2 AND TB.VERSIONING_SCHEMA <> '' AND TB.VERSIONING_TABLE <> '' UNION ALL SELECT DSC.PATH || '->AT' AS PATH ,DSC.KEYEDPATH || '--> AT(' || TB.CREATOR           || ',' || TB.NAME              || ')' AS KEYEDPATH ,'AT'        AS DTYPE ,TB.CREATOR  AS DKEY1 ,TB.NAME     AS DKEY2 ,''          AS DKEY3 ,'auxiliary table' AS DESCRIPTION ,DSC.LEVEL+1 AS LEVEL ,'C'         AS DIRECTION ,DSC.DTYPE   AS BTYPE ,DSC.DKEY1   AS BKEY1 ,DSC.DKEY2   AS BKEY2 FROM DESCENDANTS2 DSC ,SYSIBM.SYSTABLES TB ,SYSIBM.SYSAUXRELS AR WHERE DSC.LEVEL < 20 AND DSC.DTYPE IN('TB','MQ','HT','CT') AND AR.TBOWNER = DSC.DKEY1 AND AR.TBNAME = DSC.DKEY2 AND TB.CREATOR = AR.AUXTBOWNER AND TB.NAME = AR.AUXTBNAME UNION ALL SELECT DSC.PATH || '->IX' AS PATH ,DSC.KEYEDPATH || '--> IX(' || IX.CREATOR     || ',' || IX.NAME        || ')' AS KEYEDPATH ,'IX'        AS DTYPE ,IX.CREATOR  AS DKEY1 ,IX.NAME     AS DKEY2 ,''          AS DKEY3 ,'index'     AS DESCRIPTION ,DSC.LEVEL+1 AS LEVEL ,'C'         AS DIRECTION ,DSC.DTYPE   AS BTYPE ,DSC.DKEY1   AS BKEY1 ,DSC.DKEY2   AS BKEY2 FROM DESCENDANTS2 DSC ,SYSIBM.SYSINDEXES IX WHERE DSC.LEVEL < 20 AND DSC.DTYPE IN('TB','XT','AT','HT','MQ') AND IX.TBCREATOR = DSC.DKEY1 AND IX.TBNAME = DSC.DKEY2 UNION ALL SELECT DSC.PATH || '->CC' AS PATH ,DSC.KEYEDPATH || '--> CC(' || CC.CHECKNAME         || ',' || CC.TBOWNER           || ',' || CC.TBNAME            || ')' AS KEYEDPATH ,'CC'         AS DTYPE ,CC.CHECKNAME AS DKEY1 ,CC.TBOWNER   AS DKEY2 ,CC.TBNAME    AS DKEY3 ,'check constraint' AS DESCRIPTION ,DSC.LEVEL+1  AS LEVEL ,'C'          AS DIRECTION ,DSC.DTYPE    AS BTYPE ,DSC.DKEY1    AS BKEY1 ,DSC.DKEY2    AS BKEY2 FROM DESCENDANTS2 DSC ,SYSIBM.SYSCHECKS CC WHERE DSC.LEVEL < 20 AND DSC.DTYPE IN('TB','CT','HT') AND CC.TBOWNER = DSC.DKEY1 AND CC.TBNAME = DSC.DKEY2 UNION ALL SELECT DSC.PATH || '->UC' AS PATH ,DSC.KEYEDPATH || '--> UC(' || TC.CONSTNAME         || ',' || TC.TBCREATOR         || ',' || TC.TBNAME            || ')' AS KEYEDPATH ,'UC'         AS DTYPE ,TC.CONSTNAME AS DKEY1 ,TC.TBCREATOR AS DKEY2 ,TC.TBNAME    AS DKEY3 ,'unique constraint' AS DESCRIPTION ,DSC.LEVEL+1  AS LEVEL ,'C'          AS DIRECTION ,DSC.DTYPE    AS BTYPE ,DSC.DKEY1    AS BKEY1 ,DSC.DKEY2    AS BKEY2 FROM DESCENDANTS2 DSC ,SYSIBM.SYSTABCONST TC WHERE DSC.LEVEL < 20 AND DSC.DTYPE IN('TB','CT','HT') AND TC.TBCREATOR = DSC.DKEY1 AND TC.TBNAME = DSC.DKEY2 UNION ALL SELECT DSC.PATH || '->Rc' AS PATH ,DSC.KEYEDPATH || '--> Rc(' || SR.RELNAME           || ',' || SR.CREATOR           || ',' || SR.TBNAME            || ')' AS KEYEDPATH ,'Rc'         AS DTYPE ,SR.RELNAME   AS DKEY1 ,SR.CREATOR   AS DKEY2 ,SR.TBNAME    AS DKEY3 ,'referential constraint - child' AS DESCRIPTION ,DSC.LEVEL+1  AS LEVEL ,'C'          AS DIRECTION ,DSC.DTYPE    AS BTYPE ,DSC.DKEY1    AS BKEY1 ,DSC.DKEY2    AS BKEY2 FROM DESCENDANTS2 DSC ,SYSIBM.SYSRELS SR WHERE DSC.LEVEL < 20 AND DSC.DTYPE IN('TB','HT') AND SR.CREATOR = DSC.DKEY1 AND SR.TBNAME = DSC.DKEY2 UNION ALL SELECT DSC.PATH || '->Rp' AS PATH ,DSC.KEYEDPATH || '--> Rp(' || SR.RELNAME           || ',' || SR.REFTBCREATOR      || ',' || SR.REFTBNAME         || ')' AS KEYEDPATH ,'Rp'             AS DTYPE ,SR.RELNAME       AS DKEY1 ,SR.REFTBCREATOR  AS DKEY2 ,SR.REFTBNAME     AS DKEY3 ,'referential constraint - parent' AS DESCRIPTION ,DSC.LEVEL+1      AS LEVEL ,'C'              AS DIRECTION ,DSC.DTYPE        AS BTYPE ,DSC.DKEY1        AS BKEY1 ,DSC.DKEY2        AS BKEY2 FROM DESCENDANTS2 DSC ,SYSIBM.SYSRELS SR WHERE DSC.LEVEL < 20 AND DSC.DTYPE IN('TB','HT') AND SR.REFTBCREATOR = DSC.DKEY1 AND SR.REFTBNAME    = DSC.DKEY2 UNION ALL SELECT DSC.PATH || '->' || CASE RP.CONTROL_TYPE WHEN 'R' THEN 'RP' WHEN 'M' THEN 'CM' ELSE '??' END       AS PATH ,DSC.KEYEDPATH || '--> ' || CASE RP.CONTROL_TYPE WHEN 'R' THEN 'RP(' WHEN 'M' THEN 'CM(' ELSE '??' END || RP.SCHEMA            || ',' || RP.NAME              || ')' AS KEYEDPATH ,CASE RP.CONTROL_TYPE WHEN 'R' THEN 'RP' WHEN 'M' THEN 'CM' ELSE '??' END         AS DTYPE ,RP.SCHEMA    AS DKEY1 ,RP.NAME      AS DKEY2 ,''           AS DKEY3 ,CASE RP.CONTROL_TYPE WHEN 'R' THEN 'row permission' WHEN 'M' THEN 'column mask' ELSE '--> error <-- ' || RP.CONTROL_TYPE END         AS DESCRIPTION ,DSC.LEVEL+1  AS LEVEL ,'C'          AS DIRECTION ,DSC.DTYPE    AS BTYPE ,DSC.DKEY1    AS BKEY1 ,DSC.DKEY2    AS BKEY2 FROM DESCENDANTS2 DSC ,SYSIBM.SYSCONTROLS RP WHERE DSC.LEVEL < 20 AND DSC.DTYPE IN('TB','MQ','HT','CT') AND RP.TBSCHEMA = DSC.DKEY1 AND RP.TBNAME = DSC.DKEY2 UNION ALL SELECT DSC.PATH || '->' || CASE VD.DTYPE WHEN 'V' THEN 'VW' WHEN 'M' THEN 'MQ' ELSE '??' END       AS PATH ,DSC.KEYEDPATH || '--> ' || CASE VD.DTYPE WHEN 'V' THEN 'VW(' WHEN 'M' THEN 'MQ(' ELSE '??' END || VD.DCREATOR          || ',' || VD.DNAME             || ')' AS KEYEDPATH ,CASE VD.DTYPE WHEN 'V' THEN 'VW' WHEN 'M' THEN 'MQ' ELSE '??' END         AS DTYPE ,VD.DCREATOR AS DKEY1 ,VD.DNAME    AS DKEY2 ,''          AS DKEY3 ,CASE VD.DTYPE WHEN 'V' THEN 'View' WHEN 'M' THEN 'MQT' ELSE '--> error <-- ' || VD.DTYPE END         AS DESCRIPTION ,DSC.LEVEL+1 AS LEVEL ,'C'         AS DIRECTION ,DSC.DTYPE   AS BTYPE ,DSC.DKEY1   AS BKEY1 ,DSC.DKEY2   AS BKEY2 FROM DESCENDANTS2 DSC ,SYSIBM.SYSVIEWDEP VD WHERE DSC.LEVEL < 20 AND DSC.DTYPE IN ('VW','MQ','TB','CT','HT') AND VD.BCREATOR = DSC.DKEY1 AND VD.BNAME    = DSC.DKEY2 UNION ALL SELECT DSC.PATH || '->SY' AS PATH ,DSC.KEYEDPATH || '--> SY(' || SY.CREATOR           || ',' || SY.NAME              || ')' AS KEYEDPATH ,'SY'        AS DTYPE ,SY.CREATOR  AS DKEY1 ,SY.NAME     AS DKEY2 ,''          AS DKEY3 ,'synonym'   AS DESCRIPTION ,DSC.LEVEL+1 AS LEVEL ,'C'         AS DIRECTION ,DSC.DTYPE   AS BTYPE ,DSC.DKEY1   AS BKEY1 ,DSC.DKEY2   AS BKEY2 FROM DESCENDANTS2 DSC ,SYSIBM.SYSSYNONYMS SY WHERE DSC.LEVEL < 20 AND DSC.DTYPE IN ('VW','AL','MQ','TB','CT','HT') AND SY.TBCREATOR = DSC.DKEY1 AND SY.TBNAME    = DSC.DKEY2 UNION ALL SELECT DSC.PATH || '->AL' AS PATH ,DSC.KEYEDPATH || '--> AL(' || AL.CREATOR           || ',' || AL.NAME              || ')' AS KEYEDPATH ,'AL'        AS DTYPE ,AL.CREATOR  AS DKEY1 ,AL.NAME     AS DKEY2 ,''          AS DKEY3 ,'alias'     AS DESCRIPTION ,DSC.LEVEL+1 AS LEVEL ,'C'         AS DIRECTION ,DSC.DTYPE   AS BTYPE ,DSC.DKEY1   AS BKEY1 ,DSC.DKEY2   AS BKEY2 FROM DESCENDANTS2 DSC ,SYSIBM.SYSTABLES AL WHERE DSC.LEVEL < 20 AND DSC.DTYPE IN ('VW','SY','MQ','TB','CT','HT') AND AL.TYPE = 'A' AND AL.TBCREATOR = DSC.DKEY1 AND AL.TBNAME    = DSC.DKEY2 UNION ALL SELECT DSC.PATH || '->TG' AS PATH ,DSC.KEYEDPATH || '--> TG(' || TG.SCHEMA            || ',' || TG.NAME              || ')' AS KEYEDPATH ,'TG'        AS DTYPE ,TG.SCHEMA   AS DKEY1 ,TG.NAME     AS DKEY2 ,''          AS DKEY3 ,'trigger'   AS DESCRIPTION ,DSC.LEVEL+1 AS LEVEL ,'C'         AS DIRECTION ,DSC.DTYPE   AS BTYPE ,DSC.DKEY1   AS BKEY1 ,DSC.DKEY2   AS BKEY2 FROM DESCENDANTS2 DSC ,SYSIBM.SYSTRIGGERS TG WHERE DSC.LEVEL < 20 AND DSC.DTYPE IN ('VW','TB','HT','XT') AND TG.TBOWNER = DSC.DKEY1 AND TG.TBNAME  = DSC.DKEY2 ) ,FAMILY ( PATH ,KEYEDPATH ,DTYPE ,DKEY1 ,DKEY2 ,DKEY3 ,DESCRIPTION ,LEVEL ,RELATIONSHIP_TYPE ,BTYPE ,BKEY1 ,BKEY2 ) AS ( SELECT DSC.* FROM DESCENDANTS DSC UNION SELECT ASC.* FROM ASCENDANTS ASC UNION SELECT DSC2.* FROM DESCENDANTS2 DSC2 ) ,COUNTS (DTYPE ,COUNT) AS ( SELECT DTYPE, COUNT(*) FROM FAMILY GROUP BY DTYPE ) ,DISTINCTCOUNTS ( DTYPE ,COUNT ) AS ( SELECT DTYPE, COUNT(*) FROM (SELECT DISTINCT DTYPE, DKEY1, DKEY2, DKEY3 FROM FAMILY) T GROUP BY DTYPE ) ,NONZEROCOUNTS ( PATH ,KEYEDPATH ,DTYPE ,DKEY1 ,DKEY2 ,DKEY3 ,DESCRIPTION ,LEVEL ,RELATIONSHIP_TYPE ,BTYPE ,BKEY1 ,BKEY2 ) AS ( SELECT CAST('* ' || CASE CT.DTYPE WHEN 'SG' THEN 'SG - Storage group . . . . . . . . . .' || ' . . . ' WHEN 'DB' THEN 'DB - Database. . . . . . . . . . . . .' || ' . . . . ' WHEN 'TS' THEN 'TS - Table space . . . . . . . . . . .' || ' . . . . .' WHEN 'TB' THEN 'TB - Table . . . . . . . . . . . . . .' || ' . . . . . . .' WHEN 'UC' THEN 'UC - Unique.constraint . . . . . . . .' || ' . . .' WHEN 'Rc' THEN 'Rc - Referential constraint, child . .' || ' .' WHEN 'Rp' THEN 'Rp - Referential constraint, parent. .' WHEN 'CC' THEN 'CC - Check constraint. . . . . . . . .' || ' . . ' WHEN 'RP' THEN 'RP - Row permission. . . . . . . . . .' || ' . . ' WHEN 'CM' THEN 'CM - Column mask . . . . . . . . . . .' || ' . . . ' WHEN 'AT' THEN 'AT - Auxiliary table . . . . . . . . .' || ' . . . . ' WHEN 'CT' THEN 'CT - Clone table . . . . . . . . . . .' || ' . . . . .' WHEN 'GT' THEN 'GT - Global temporary table. . . . . .' || ' ' WHEN 'HT' THEN 'HT - History table . . . . . . . . . .' || ' . . . . .' WHEN 'XT' THEN 'XT - XML table . . . . . . . . . . . .' || ' . . . . . .' WHEN 'MQ' THEN 'MQ - Materialized query table. . . . .' || ' . ' WHEN 'IX' THEN 'IX - Index . . . . . . . . . . . . . .' || ' . . . . . . .' WHEN 'VW' THEN 'VW - View. . . . . . . . . . . . . . .' || ' . . . . . ' WHEN 'SY' THEN 'SY - Synonym . . . . . . . . . . . . .' || ' . . . . ' WHEN 'AL' THEN 'AL - Alias . . . . . . . . . . . . . .' || ' . . . . . .' WHEN 'TG' THEN 'TG - Trigger . . . . . . . . . . . . .' || ' . . . . . . ' WHEN 'SQ' THEN 'SQ - Sequence. . . . . . . . . . . . .' || ' . . . . .' WHEN 'RT' THEN 'RT - Routine . . . . . . . . . . . . .' || ' . . . . . . ' WHEN 'DT' THEN 'DT - Distinct type . . . . . . . . . .' || ' . . . . .' WHEN 'PK' THEN 'PK - Package . . . . . . . . . . . . .' || ' . . . . .' WHEN 'PL' THEN 'PL - Plan. . . . . . . . . . . . . . .' || ' . . . . . ' WHEN 'RO' THEN 'RO - Role. . . . . . . . . . . . . . .' || ' . . . . . ' ELSE '--> error, unexpected dependent type=' || CT.DTYPE END || ' Count = ' || CHAR(DT.COUNT) AS VARCHAR(128))       AS PATH ,CAST('* ' || CASE CT.DTYPE WHEN 'SG' THEN 'SG(name)                   ' WHEN 'DB' THEN 'DB(name)                   ' WHEN 'TS' THEN 'TS(dbname, name)           ' WHEN 'TB' THEN 'TB(creator,name)           ' WHEN 'UC' THEN 'UC(name, tbcreator, tbname)' WHEN 'Rc' THEN 'Rc(name, tbcreator, tbname)' WHEN 'Rp' THEN 'Rp(name, tbcreator, tbname)' WHEN 'CC' THEN 'CC(name, tbcreator, tbname)' WHEN 'RP' THEN 'RP(schema, name)           ' WHEN 'CM' THEN 'CM(schema, name)           ' WHEN 'AT' THEN 'AT(creator, name)          ' WHEN 'CT' THEN 'CT(creator, name)          ' WHEN 'HT' THEN 'HT(creator, name)          ' WHEN 'XT' THEN 'XT(creator, name)          ' WHEN 'MQ' THEN 'MQ(creator, name)          ' WHEN 'IX' THEN 'IX(creator, name)          ' WHEN 'VW' THEN 'VW(creator, name)          ' WHEN 'SY' THEN 'SY(creator, name)          ' WHEN 'AL' THEN 'AL(creator, name)          ' WHEN 'TG' THEN 'TG(schema, name)           ' WHEN 'SQ' THEN 'SQ(schema, name)           ' WHEN 'RT' THEN 'RT(schema, specificname, type)   ' WHEN 'DT' THEN 'DT(schema, name)           ' WHEN 'PK' THEN 'PK(collid, name, contoken) ' WHEN 'PL' THEN 'PL(name)                   ' WHEN 'RO' THEN 'RO(name)                   ' ELSE '--> error, unexpected dependent type=' || CT.DTYPE END AS VARCHAR(7400))      AS KEYEDPATH ,CAST('' AS CHAR(2)     ) AS DTYPE ,CAST('' AS VARCHAR(128)) AS DKEY1 ,CAST('' AS VARCHAR(128)) AS DKEY2 ,CAST('' AS VARCHAR(128)) AS DKEY3 ,CAST('' AS VARCHAR(128)) AS DESCRIPTION ,CAST(0  AS INTEGER     ) AS LEVEL ,CAST('' AS CHAR(1)     ) AS RELATIONSHIP_TYPE ,CAST('' AS CHAR(2)     ) AS BTYPE ,CAST('' AS VARCHAR(128)) AS BKEY1 ,CAST('' AS VARCHAR(128)) AS BKEY2 FROM COUNTS CT ,DISTINCTCOUNTS DT WHERE CT.COUNT > 0 AND CT.DTYPE = DT.DTYPE ) SELECT PATH , KEYEDPATH , DTYPE , DKEY1 , DKEY2 , DKEY3 , DESCRIPTION , CHAR(LEVEL) AS LEVEL , RELATIONSHIP_TYPE , BTYPE , BKEY1 , BKEY2 FROM NONZEROCOUNTS UNION SELECT '*# Total objects = ' || CHAR(SUM(COUNT)) AS PATH , '' AS KEYEDPATH , '' AS DTYPE , '' AS DKEY1 , '' AS DKEY2 , '' AS DKEY3 , '' AS DESCRIPTION , '' AS LEVEL , '' AS RELATIONSHIP_TYPE , '' AS BTYPE , '' AS BKEY1 , '' AS BKEY2 FROM DISTINCTCOUNTS UNION SELECT PATH , KEYEDPATH , DTYPE , DKEY1 , DKEY2 , DKEY3 , DESCRIPTION , CHAR(LEVEL) AS LEVEL , RELATIONSHIP_TYPE , BTYPE , BKEY1 , BKEY2 FROM FAMILY",
        "type": "PREPARE",
        "subtype": "SELECT",
        "repeat": 1,
        "args": [
         {
            "value": "PTSG",
            "type": "static",
            "datatype": "varchar"
         }]
      }
    ]
  }
}