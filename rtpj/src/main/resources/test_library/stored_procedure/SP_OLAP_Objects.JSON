{
  "test": {
    "description": "Drops then Creates store procedure RTPJOLAP.",
    "connection": {
      "ssid": "DD0G",
      "userid": "QADBA01"
    },
    "statements": [
      {
        "text": "SET CURRENT SCHEMA = 'RTP'",
        "type": "IMMEDIATE",
        "subtype": "SET"
      },
      {
        "text": "DROP PROCEDURE RTP.RTPJOLAP",
        "type": "IMMEDIATE",
        "subtype": "DROP",
        "expect" : {
          "ignore": true
        }
      },
      {
        "description": "Procedure RTPJOLAP is a static procedure.  It uses parallelism and takes no arguments.",
        "text": "CREATE PROCEDURE RTP.RTPJOLAP LANGUAGE SQL DYNAMIC RESULT SETS 1 P1: BEGIN DECLARE V_TMPINT INTEGER DEFAULT 0; DECLARE V_TMPINT2 INTEGER DEFAULT 0; DECLARE V_TMPINT3 INTEGER DEFAULT 0; DECLARE GLOBAL TEMPORARY TABLE SESSION.GBLTEMP ( TMPID INT, TMPNAME VARCHAR(4042)) ON COMMIT DELETE ROWS NOT LOGGED ON ROLLBACK DELETE ROWS; SELECT id INTO V_TMPINT FROM RTP.RTPJSP1 FETCH FIRST 1 ROWS ONLY; SELECT id INTO V_TMPINT2 FROM RTP.RTPJSP1 FETCH FIRST 1 ROWS ONLY; INSERT INTO SESSION.GBLTEMP(TMPID, TMPNAME) SELECT ROWNUMBER() OVER (ORDER BY A.id), A.resume FROM ( SELECT id, resume FROM RTP.RTPJSP1 FETCH FIRST 10 ROWS ONLY) AS A LEFT OUTER JOIN ( SELECT id FROM RTP.RTPJSP1 FETCH FIRST 10 ROWS ONLY) AS B ON ( A.id = B.id); SELECT COUNT(*) INTO V_TMPINT3 FROM RTP.RTPJSP1; BEGIN DECLARE CURSOR1 CURSOR WITH HOLD WITH RETURN TO CALLER FOR ( SELECT TMPID, TMPNAME FROM SESSION.GBLTEMP); P2: BEGIN OPEN CURSOR1; END P2; END; END P1 ",
        "type": "IMMEDIATE",
        "subtype": "CREATE"
      },
      {
        "description": "RTPJOLAP",
        "text": "CALL RTP.RTPJOLAP()",
        "type": "CALL",
        "subtype": "Procedure",
        "repeat": 1,
        "args": [
        ]
      }
    ]
  }
}